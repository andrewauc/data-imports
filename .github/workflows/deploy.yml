name: Build and Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          INFLUXDB_BUCKET: ${{ secrets.INFLUXDB_BUCKET }}
        run: |
          # Save SSH key
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Create .env file content
          ENV_CONTENT="INFLUXDB_URL=$INFLUXDB_URL
          INFLUXDB_TOKEN=$INFLUXDB_TOKEN
          INFLUXDB_ORG=$INFLUXDB_ORG
          INFLUXDB_BUCKET=$INFLUXDB_BUCKET
          MELTANO_ENVIRONMENT=prod"
          
          # Deploy to EC2
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'ENDSSH'
            # Login to GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull latest image
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            
            # Stop and remove existing container
            docker stop meltano-nationalgas || true
            docker rm meltano-nationalgas || true
            
            # Create .env file
            cat > /home/${{ secrets.EC2_USER }}/meltano-etl/.env << 'EOF'
          $ENV_CONTENT
          EOF
            
            # Run new container
            docker run -d \
              --name meltano-nationalgas \
              --restart unless-stopped \
              --env-file /home/${{ secrets.EC2_USER }}/meltano-etl/.env \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              /bin/sh -c "while true; do meltano run nationalgas-to-influxdb; sleep 1800; done"
            
            # Clean up old images
            docker image prune -af
          ENDSSH
          
          # Clean up
          rm -f private_key.pem
